(function() {
  var RevealGenerator, path, semver, yeoman,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  path = require('path');

  yeoman = require('yeoman-generator');

  semver = require('semver');

  module.exports = RevealGenerator = (function(_super) {
    __extends(RevealGenerator, _super);

    function RevealGenerator(args, options) {
      yeoman.generators.Base.apply(this, arguments);
      this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));
      this.config.defaults({
        presentationTitle: 'Reveal.js and Yeoman is Awesomeness',
        packageVersion: '0.0.0',
        useSass: false
      });
      this.on('end', function() {
        return this.installDependencies({
          skipInstall: options['skip-install']
        });
      });
    }

    RevealGenerator.prototype.askFor = function() {
      var cb, prompts;
      cb = this.async();
      this.log(this.yeoman);
      prompts = [
        {
          name: 'presentationTitle',
          message: 'What are you going to talk about?',
          "default": this.config.get('presentationTitle')
        }, {
          name: 'packageVersion',
          message: 'What version should we put in the package.json file?',
          "default": this.config.get('packageVersion'),
          validate: function(input) {
            if (!semver.valid(input)) {
              return 'Please enter a correct semver version, i.e. MAJOR.MINOR.PATCH.';
            }
            return true;
          }
        }, {
          name: 'useSass',
          message: 'Do you want to use SASS to create a custom theme? This requires you to have Ruby and Sass installed.',
          type: 'confirm',
          "default": this.config.get('useSass')
        }
      ];
      return this.prompt(prompts, (function(_this) {
        return function(props) {
          _this.config.set('presentationTitle', props.presentationTitle);
          _this.config.set('packageVersion', props.packageVersion);
          _this.config.set('useSass', props.useSass);
          return cb();
        };
      })(this));
    };

    RevealGenerator.prototype.app = function() {
      this.template('_index.md', 'slides/index.md');
      this.template('_Gruntfile.coffee', 'Gruntfile.coffee');
      this.template('__index.html', 'templates/_index.html');
      this.template('__section.html', 'templates/_section.html');
      this.template('_package.json', 'package.json');
      this.template('_bower.json', 'bower.json');
      this.copy('loadhtmlslides.js', 'js/loadhtmlslides.js');
      this.copy('list.json', 'slides/list.json');
      if (this.config.get('useSass')) {
        return this.copy('theme.scss', 'css/source/theme.scss');
      }
    };

    RevealGenerator.prototype.projectfiles = function() {
      this.copy('editorconfig', '.editorconfig');
      return this.copy('jshintrc', '.jshintrc');
    };

    RevealGenerator.prototype.runtime = function() {
      this.copy('bowerrc', '.bowerrc');
      return this.copy('gitignore', '.gitignore');
    };

    return RevealGenerator;

  })(yeoman.generators.Base);

}).call(this);
